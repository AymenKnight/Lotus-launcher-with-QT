//Generated by FigmaQML
import Qt5Compat.GraphicalEffects
import QtQuick
import QtQuick.Shapes
import QtQuick.Timeline 1.0

Rectangle {
    id: main_button
    objectName: "MainButton"
    anchors.centerIn: parent
    width: 160
    height: 160
    radius: 100
    border.color: "#ffffff"
    border.width: 5
    color: "transparent"
    MouseArea {
        id: mouseArea
        anchors.fill: parent

    }

    Rectangle {
        id: inside_circle
        radius: 1000
        width: 140
        height: 140
        anchors.centerIn: parent

        Shape {
            id: shape

            objectName: "Vector"
            x: 30
            y: 22
            width: 78.5029
            height: 85.0476
            anchors.centerIn: parent
            ShapePath {
                strokeColor: "transparent"
                strokeWidth: 1
                fillColor: "#ffffffff"

                fillRule: ShapePath.WindingFill
                PathSvg {

                    path: "M59.0377 11.9314C55.9233 10.1107 52.3408 12.6074 52.3408 16.215C52.3408 18.1977 53.4859 19.9768 55.154 21.0486C63.2945 26.2791 68.7025 35.3919 68.7025 45.7961C68.7025 62.0582 55.5301 75.2306 39.2681 75.2306C23.006 75.2306 9.81702 62.0582 9.81702 45.7961C9.81702 35.3922 15.2247 26.2796 23.3648 21.049C25.0333 19.9769 26.1787 18.1974 26.1787 16.2141C26.1787 12.6064 22.5967 10.109 19.4811 11.928C7.82987 18.7305 0 31.3292 0 45.7961C0 67.4733 17.5743 85.0476 39.2515 85.0476C60.9286 85.0476 78.5029 67.4733 78.5029 45.7961C78.5029 31.3316 70.6757 18.7348 59.0377 11.9314ZM39.2515 32.7068C42.856 32.7068 45.7961 29.7667 45.7961 26.1621L45.7961 6.54468C45.7961 2.94012 42.8726 0 39.2515 0C35.6303 0 32.7068 2.94012 32.7068 6.54468L32.7068 26.1787C32.7068 29.7833 35.6469 32.7068 39.2515 32.7068Z"
                }
            }
        }
        Image {
            id: image
            anchors.centerIn: parent
            width: 100
            height: 100
            visible: false
            source: "images/big_loading.svg"
            fillMode: Image.PreserveAspectFit
        }
    }

    Text {
        id: stateText
        x: 0
        y: 159
        width: 150
        height: 35
        color: "#ffffff"
        text: qsTr("State")
        font.pixelSize: 26
        horizontalAlignment: Text.AlignHCenter
        fontSizeMode: Text.HorizontalFit
    }

    Text {
        id: timeCounter
        x: 0
        y: 195
        width: 150
        height: 21
        visible: false
        color: "#ffffff"
        text: qsTr("")
        font.pixelSize: 18
        horizontalAlignment: Text.AlignHCenter
        font.weight: Font.Medium
    }

    states: [
        State {
            name: "started"
            PropertyChanges {
                target: inside_circle
                color: "#30a1ac"
            }
            PropertyChanges {
                target: main_button
                border.color: "#ff0acf83"
            }
            PropertyChanges {
                target: stateText

                color: "#0ACF83"
                text: qsTr("Started")
            }

            PropertyChanges {
                target: timeCounter
                text: qsTr("00:30:24")
                visible: true
                color: "#ffffff"
            }

            PropertyChanges {
                target: mouseArea
                cursorShape: Qt.PointingHandCursor
            }
        },
        State {
            name: "shutdown"
            PropertyChanges {
                target: inside_circle
                color: "#fff44336"
            }
            PropertyChanges {
                target: main_button
                border.color: "#374151"
            }
            PropertyChanges {
                target: stateText

                color: "#fff44336"
                text: qsTr("Shutdown")
            }

            PropertyChanges {
                target: mouseArea
                cursorShape: Qt.PointingHandCursor
            }
        },
        State {
            name: "start"
            PropertyChanges {
                target: inside_circle

                color: "#ff0acf83"
            }
            PropertyChanges {
                target: main_button
                border.color: "#374151"
            }
            PropertyChanges {
                target: stateText
                text: qsTr("Click to start")
            }

            PropertyChanges {
                target: mouseArea
                cursorShape: Qt.PointingHandCursor
            }
        },
        State {
            name: "stopped"
            PropertyChanges {
                target: inside_circle
                color: "#ff646d8d"
            }
            PropertyChanges {
                target: main_button
                border.color: "#374151"
            }
            PropertyChanges {
                target: stateText
                text: qsTr("Stopped")
                color: "#ff646d8d"
            }

            PropertyChanges {
                target: mouseArea
                cursorShape: Qt.PointingHandCursor
            }
        },
        State {
            name: "loading"
            PropertyChanges {
                target: inside_circle
                color: "#F2994A"
            }
            PropertyChanges {
                target: main_button
                border.color: "#374151"
            }
            PropertyChanges {
                target: stateText
                text: qsTr("Loading")
                color: "#F2994A"
            }

            PropertyChanges {
                target: image
                visible: true
            }

            PropertyChanges {
                target: shape
                visible: false
            }

            PropertyChanges {
                target: timeline
                enabled: true
            }

            PropertyChanges {
                target: timelineAnimation
                running: true
            }

            PropertyChanges {
                target: mouseArea
                cursorShape: Qt.BusyCursor
            }
        }
    ]
    Timeline {
        id: timeline
        animations: [
            TimelineAnimation {
                id: timelineAnimation
                onFinished: statusIndicator.state = "loading"
                duration: 750
                running: false
                loops: -1
                to: 1000
                from: 0
            }
        ]
        endFrame: 1000
        enabled: false
        startFrame: 0

        KeyframeGroup {
            target: image
            property: "rotation"
            Keyframe {
                frame: 0
                value: 0
            }

            Keyframe {
                frame: 249
                value: 90
            }

            Keyframe {
                frame: 500
                value: 180
            }

            Keyframe {
                frame: 752
                value: 270
            }

            Keyframe {
                frame: 997
                value: 360
            }
        }
    }


}
